FROM ubuntu:18.04

# To make it easier for build and release pipelines to run apt-get,
# configure apt to not require confirmation (assume the -y argument by default)
ENV DEBIAN_FRONTEND=noninteractive
RUN echo "APT::Get::Assume-Yes \"true\";" > /etc/apt/apt.conf.d/90assumeyes

# Update and Upgrade Ubuntu 18.04
RUN apt-get update \
  && apt-get upgrade -y --no-install-recommends 

# Install Required Dependencies
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg-agent \
        jq \
        iputils-ping \
        libcurl4 \
        libicu60 \
        libunwind8 \
        netcat \
        wget \
        unzip \
        tree

# Ubuntu 18.04 Repository Default Vim, Git, Java, Maven, and NodeJS Installations
RUN apt-get install -y --no-install-recommends \
        vim \
        git \
        default-jdk \
        openjdk-11-jdk \
        maven \
        nodejs \
        npm

# GCC and CPP Installations
RUN apt-get install -y --no-install-recommends \
        build-essential \
        software-properties-common \
        libc6-dev \
        gcc \
        g++\
        cpp \
        dpkg-dev \
        make \
        cmake

# Python2 and Python3 Installations
RUN apt-get install -y --no-install-recommends \
        python \
        python-dev \
        python3 \
        python3-dev \
        python3-pip \
        virtualenv \
        libssl-dev \
        libffi-dev 

# NodeJS 14 LTS Installation
WORKDIR /azp/nodejs
RUN curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
RUN apt-get install -y --no-install-recommends nodejs

# Java Home Folder Set
RUN export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
RUN export PATH=$PATH:$JAVA_HOME/bin

# Maven 3.8.1 Installation
WORKDIR /azp/maven
RUN wget https://ftp.itu.edu.tr/Mirror/Apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz
RUN tar -xvzf apache-maven-3.8.1-bin.tar.gz \
  && mv apache-maven-3.8.1 maven \
  && mv /usr/share/maven /usr/share/maven-old \ 
  && mv maven /usr/share/
RUN rm -rf /azp/maven/apache-maven-3.8.1-bin.tar.gz

# SonarScanner 4.6.2.2472 Installation
WORKDIR /azp/sonarscanner
RUN wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
RUN unzip sonar-scanner-cli-4.6.2.2472-linux.zip
RUN export PATH=${PATH}:/azp/sonarscanner/sonar-scanner-4.6.2.2472-linux/bin
RUN rm -rf /azp/sonarscanner/sonar-scanner-cli-4.6.2.2472-linux.zip

# Azure DevOps Agent 2.153.1 Installation
ARG VSTS_VERSION=2.153.1
WORKDIR /azp/agent
RUN wget https://vstsagentpackage.azureedge.net/agent/2.153.1/vsts-agent-linux-x64-2.153.1.tar.gz

# Azure DevOps Agent Environment Variables
ENV AGENT_ALLOW_RUNASROOT=1
#ENV AZP_AGENT_NAME=
ENV AZP_URL=http://domain.company.com.tr:8080/tfs/collection_name/
ENV AZP_POOL=pool_name
ENV AZP_TOKEN=token
ENV AZP_USERNAME=username
ENV AZP_PASSWORD=password

# Azure DevOps Agent Dependencies
RUN tar xzf vsts-agent-linux-x64-2.153.1.tar.gz \
  && ./bin/installdependencies.sh
RUN rm -rf /azp/agent/vsts-agent-linux-x64-2.153.1.tar.gz

# Cleanup Ubuntu Environment
RUN apt-get autoremove -y & apt-get autoclean -y & apt-get clean -y

# Azure DevOps Agent Starting
WORKDIR /azp
COPY ./start.sh .
RUN chmod +x start.sh
CMD ["./start.sh"]
