FROM jenkins:inbound-agent

USER root

# To make it easier for build and release pipelines to run apt-get,
# configure apt to not require confirmation (assume the -y argument by default)
ENV DEBIAN_FRONTEND=noninteractive
RUN echo "APT::Get::Assume-Yes \"true\";" > /etc/apt/apt.conf.d/90assumeyes

# Update and Upgrade Debian Buster 10
RUN apt-get update \
  && apt-get upgrade -y --no-install-recommends 

# Install Required Dependencies
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg-agent \
        jq \
        iputils-ping \
        libcurl4 \
        libicu60 \
        libunwind8 \
        netcat \
        wget \
        unzip \
        tree

# Debian Buster Repository Default Vim, Git, Java, Maven, and NodeJS Installations
RUN apt-get install -y --no-install-recommends \
        vim \
        git \
        default-jdk \
        openjdk-11-jdk \
        maven \
        nodejs \
        npm

# GCC and CPP Installations
RUN apt-get install -y --no-install-recommends \
        build-essential \
        software-properties-common \
        libc6-dev \
        gcc \
        g++\
        cpp \
        dpkg-dev \
        make \
        cmake

# Python2 and Python3 Installations
RUN apt-get install -y --no-install-recommends \
        python \
        python-dev \
        python3 \
        python3-dev \
        python3-pip \
        virtualenv \
        libssl-dev \
        libffi-dev 

# Python3 Flask Installation
RUN pip3 install flask 

# Go 1.16.5 Installation
RUN mkdir -p /home/jenkins/go
WORKDIR /home/jenkins/go
RUN wget https://dl.google.com/go/go1.16.5.linux-amd64.tar.gz
RUN tar -zxvf go1.16.5.linux-amd64.tar.gz -C /usr/local/
RUN export PATH=${PATH}:/usr/local/go/bin
RUN mkdir -p /home/jenkins/go/workspace
RUN export GOPATH=/home/jenkins/go/workspace
RUN rm -rf /home/jenkins/gogo1.16.5.linux-amd64.tar.gz

# NodeJS 14 LTS Installation
RUN mkdir -p /home/jenkins/nodejs
WORKDIR /home/jenkins/nodejs
RUN curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
RUN apt-get install -y --no-install-recommends nodejs

# Java Home Folder Set
RUN export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
RUN export PATH=$PATH:$JAVA_HOME/bin

# Maven 3.8.1 Installation
RUN mkdir -p /home/jenkins/maven
WORKDIR /home/jenkins/maven
RUN wget https://ftp.itu.edu.tr/Mirror/Apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz
RUN tar -xvzf apache-maven-3.8.1-bin.tar.gz \
  && mv apache-maven-3.8.1 maven \
  && mv /usr/share/maven /usr/share/maven-old \ 
  && mv maven /usr/share/
RUN rm -rf /home/jenkins/maven/apache-maven-3.8.1-bin.tar.gz

# SonarScanner 4.6.2.2472 Installation
RUN mkdir -p /home/jenkins/sonarscanner
WORKDIR /home/jenkins/sonarscanner
RUN wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
RUN unzip sonar-scanner-cli-4.6.2.2472-linux.zip
RUN export PATH=${PATH}:/home/jenkins/sonarscanner/sonar-scanner-4.6.2.2472-linux/bin
RUN rm -rf /home/jenkins/sonarscanner/sonar-scanner-cli-4.6.2.2472-linux.zip

# Cleanup Debian Environment
RUN apt-get autoremove -y & apt-get autoclean -y & apt-get clean -y

# Azure DevOps Agent Starting
USER jenkins

ENTRYPOINT ["/usr/local/bin/jenkins-agent"]